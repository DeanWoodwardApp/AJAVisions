{"ast":null,"code":"var _jsxFileName = \"/Users/deanwoodward/Documents/GitHub/AJAVisions/src/App.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\n// ... other imports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(\"\");\n  useEffect(() => {\n    // Display the preloader every time the route changes\n    setIsLoading(true);\n\n    // Map the pathname to a human-readable page name\n    const pageNames = {\n      \"/\": \"Home\",\n      \"/about\": \"About\",\n      \"/gallery\": \"Gallery\",\n      \"/contact\": \"Contact\"\n    };\n    setCurrentPage(pageNames[location.pathname] || \"\");\n\n    // Hide the preloader after a short delay\n    const timeoutId = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n\n    // Cleanup the timeout if the component is unmounted\n    return () => clearTimeout(timeoutId);\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: isLoading && /*#__PURE__*/_jsxDEV(Preloader, {\n        text: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/gallery\",\n          element: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JeenFo3WhwK9dVGVhiJfaKzRVGo=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLocation","jsxDEV","_jsxDEV","App","_s","location","isLoading","setIsLoading","useState","currentPage","setCurrentPage","useEffect","pageNames","pathname","timeoutId","setTimeout","clearTimeout","className","children","AnimatePresence","mode","Preloader","text","fileName","_jsxFileName","lineNumber","columnNumber","Router","Navbar","Routes","Route","path","element","Home","About","Gallery","Contact","_c","$RefreshReg$"],"sources":["/Users/deanwoodward/Documents/GitHub/AJAVisions/src/App.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\n// ... other imports\n\nfunction App() {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(\"\");\n\n  useEffect(() => {\n    // Display the preloader every time the route changes\n    setIsLoading(true);\n\n    // Map the pathname to a human-readable page name\n    const pageNames = {\n      \"/\": \"Home\",\n      \"/about\": \"About\",\n      \"/gallery\": \"Gallery\",\n      \"/contact\": \"Contact\"\n    };\n    setCurrentPage(pageNames[location.pathname] || \"\");\n\n    // Hide the preloader after a short delay\n    const timeoutId = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n\n    // Cleanup the timeout if the component is unmounted\n    return () => clearTimeout(timeoutId);\n  }, [location]);\n\n  return (\n    <div className=\"App\">\n      <AnimatePresence mode='wait'>\n        {isLoading && <Preloader text={currentPage} />}\n      </AnimatePresence>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/gallery\" element={<Gallery />} />\n          <Route path=\"/contact\" element={<Contact />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}